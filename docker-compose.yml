version: "3.8"
services:
  nginx:
    image: nginx:1.21.1-alpine
    container_name: nginx
    hostname: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx/default.conf:/etc/nginx/nginx.conf:ro"
    restart: unless-stopped

  auth:
    build:
      context: ./auth
      target: production
    container_name: auth
    hostname: auth
    restart: unless-stopped
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    command: "sh ./wait-for-it.sh redis:6379 mongodb:27017 rabbitmq:5672 -- yarn start"

  emails:
    build:
      context: ./emails
      target: production
    container_name: emails
    hostname: emails
    restart: unless-stopped
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    command: "sh ./wait-for-it.sh redis:6379 mongodb:27017 rabbitmq:5672 -- yarn start"

  example:
    build:
      context: ./example
      target: production
    container_name: example
    hostname: example
    restart: unless-stopped
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    command: "sh ./wait-for-it.sh redis:6379 mongodb:27017 rabbitmq:5672 -- yarn start"

  storage:
    build:
      context: ./storage
      target: production
    container_name: storage
    hostname: storage
    restart: unless-stopped
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    command: "sh ./wait-for-it.sh redis:6379 mongodb:27017 rabbitmq:5672 -- yarn start"

  stranerd:
    build:
      context: ./stranerd
      target: production
    container_name: stranerd
    hostname: stranerd
    restart: unless-stopped
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    command: "sh ./wait-for-it.sh redis:6379 mongodb:27017 rabbitmq:5672 -- yarn start"

  mongodb:
    image: mongo
    container_name: mongodb
    hostname: mongodb
    volumes:
      - "./mongo/data/mongo1/db:/data/db"
      - "./mongo/data/mongo1/configdb:/data/configdb"
    restart: unless-stopped
    command: "--quiet --bind_ip_all --replSet rs0"

  rabbitmq:
    build:
      context: ./rabbitmq
    container_name: rabbitmq
    hostname: rabbitmq
    restart: unless-stopped
    ports:
      - "15672:15672"

  redis:
    image: redis:6.2.5-alpine
    container_name: redis
    hostname: redis

  rsinit:
    build:
      context: ./mongo
    container_name: rsinit
    hostname: rsinit
    depends_on:
      - mongodb
    restart: on-failure
    entrypoint: "bash ./rs.sh"